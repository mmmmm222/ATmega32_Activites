Archive member included because of file (symbol)

k:/courses/arm_course/arm_tools/imt_sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              k:/courses/arm_course/arm_tools/imt_sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
k:/courses/arm_course/arm_tools/imt_sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./SPI_program.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD k:/courses/arm_course/arm_tools/imt_sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./DIO_programe.o
LOAD ./GIE_program.o
LOAD ./PORT_program.o
LOAD ./SPI_main.o
LOAD ./SPI_program.o
LOAD k:/courses/arm_course/arm_tools/imt_sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD k:/courses/arm_course/arm_tools/imt_sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD k:/courses/arm_course/arm_tools/imt_sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xc2c
 *(.vectors)
 .vectors       0x00000000       0x54 k:/courses/arm_course/arm_tools/imt_sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 k:/courses/arm_course/arm_tools/imt_sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc k:/courses/arm_course/arm_tools/imt_sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x10 k:/courses/arm_course/arm_tools/imt_sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000060                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000070        0x8 k:/courses/arm_course/arm_tools/imt_sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00000078        0x4 k:/courses/arm_course/arm_tools/imt_sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000078                __vector_1
                0x00000078                __bad_interrupt
                0x00000078                __vector_6
                0x00000078                __vector_3
                0x00000078                __vector_11
                0x00000078                __vector_13
                0x00000078                __vector_17
                0x00000078                __vector_19
                0x00000078                __vector_7
                0x00000078                __vector_5
                0x00000078                __vector_4
                0x00000078                __vector_9
                0x00000078                __vector_2
                0x00000078                __vector_15
                0x00000078                __vector_8
                0x00000078                __vector_14
                0x00000078                __vector_10
                0x00000078                __vector_16
                0x00000078                __vector_18
                0x00000078                __vector_20
 .text          0x0000007c        0x0 ./DIO_programe.o
 .text          0x0000007c        0x0 ./GIE_program.o
 .text          0x0000007c        0x0 ./PORT_program.o
 .text          0x0000007c        0x0 ./SPI_main.o
 .text          0x0000007c        0x0 ./SPI_program.o
 .text          0x0000007c        0x0 k:/courses/arm_course/arm_tools/imt_sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x0000007c        0x0 k:/courses/arm_course/arm_tools/imt_sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x0000007c                . = ALIGN (0x2)
 *(.text.*)
 .text.DIO_u8SetPinValue
                0x0000007c      0x224 ./DIO_programe.o
                0x0000007c                DIO_u8SetPinValue
 .text.DIO_u8SetPortValue
                0x000002a0       0x90 ./DIO_programe.o
                0x000002a0                DIO_u8SetPortValue
 .text.DIO_u8GetPinValue
                0x00000330      0x130 ./DIO_programe.o
                0x00000330                DIO_u8GetPinValue
 .text.GIE_voidEnable
                0x00000460       0x1c ./GIE_program.o
                0x00000460                GIE_voidEnable
 .text.GIE_voidDisable
                0x0000047c       0x1c ./GIE_program.o
                0x0000047c                GIE_voidDisable
 .text.PORT_voidInIt
                0x00000498       0x44 ./PORT_program.o
                0x00000498                PORT_voidInIt
 .text.main     0x000004dc        0xa ./SPI_main.o
                0x000004dc                main
 .text.SPI_VoidInit
                0x000004e6       0x8c ./SPI_program.o
                0x000004e6                SPI_VoidInit
 .text.SPI_u8InitConfig
                0x00000572      0x3d8 ./SPI_program.o
                0x00000572                SPI_u8InitConfig
 .text.SPI_u8Tranceive
                0x0000094a       0xbe ./SPI_program.o
                0x0000094a                SPI_u8Tranceive
 .text.SPI_u8BufferTranceiverSynch
                0x00000a08       0x86 ./SPI_program.o
                0x00000a08                SPI_u8BufferTranceiverSynch
 .text.SPI_u8BufferTranceiverAsynch
                0x00000a8e       0xda ./SPI_program.o
                0x00000a8e                SPI_u8BufferTranceiverAsynch
 .text.__vector_12
                0x00000b68       0xc0 ./SPI_program.o
                0x00000b68                __vector_12
 .text.libgcc   0x00000c28        0x0 k:/courses/arm_course/arm_tools/imt_sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000c28        0x0 k:/courses/arm_course/arm_tools/imt_sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000c28                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000c28        0x0 k:/courses/arm_course/arm_tools/imt_sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000c28                exit
                0x00000c28                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000c28        0x4 k:/courses/arm_course/arm_tools/imt_sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000c2c                _etext = .

.data           0x00800060        0x0 load address 0x00000c2c
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 k:/courses/arm_course/arm_tools/imt_sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./DIO_programe.o
 .data          0x00800060        0x0 ./GIE_program.o
 .data          0x00800060        0x0 ./PORT_program.o
 .data          0x00800060        0x0 ./SPI_main.o
 .data          0x00800060        0x0 ./SPI_program.o
 .data          0x00800060        0x0 k:/courses/arm_course/arm_tools/imt_sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 k:/courses/arm_course/arm_tools/imt_sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x9
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 k:/courses/arm_course/arm_tools/imt_sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800060        0x0 ./DIO_programe.o
 .bss           0x00800060        0x0 ./GIE_program.o
 .bss           0x00800060        0x0 ./PORT_program.o
 .bss           0x00800060        0x0 ./SPI_main.o
 .bss           0x00800060        0x0 ./SPI_program.o
 .bss           0x00800060        0x0 k:/courses/arm_course/arm_tools/imt_sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800060        0x0 k:/courses/arm_course/arm_tools/imt_sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.SPI_pu8TData
                0x00800060        0x2 ./SPI_program.o
 .bss.SPI_pu8RData
                0x00800062        0x2 ./SPI_program.o
 .bss.SPI_pvNotificationFunc
                0x00800064        0x2 ./SPI_program.o
 .bss.SPI_u8State
                0x00800066        0x1 ./SPI_program.o
 .bss.SPI_u8BufferSize
                0x00800067        0x1 ./SPI_program.o
 .bss.SPI_u8Index
                0x00800068        0x1 ./SPI_program.o
 *(COMMON)
                0x00800069                PROVIDE (__bss_end, .)
                0x00000c2c                __data_load_start = LOADADDR (.data)
                0x00000c2c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800069        0x0
                0x00800069                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800069                PROVIDE (__noinit_end, .)
                0x00800069                _end = .
                0x00800069                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0xfe4
 *(.stab)
 .stab          0x00000000      0x450 ./DIO_programe.o
 .stab          0x00000450      0x144 ./GIE_program.o
                                0x1bc (size before relaxing)
 .stab          0x00000594      0x168 ./PORT_program.o
                                0x1e0 (size before relaxing)
 .stab          0x000006fc       0xf0 ./SPI_main.o
                                 0xfc (size before relaxing)
 .stab          0x000007ec      0x7f8 ./SPI_program.o
                                0x870 (size before relaxing)

.stabstr        0x00000000      0x794
 *(.stabstr)
 .stabstr       0x00000000      0x794 ./DIO_programe.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(SPI.elf elf32-avr)
LOAD linker stubs
